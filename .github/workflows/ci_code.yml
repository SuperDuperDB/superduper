name: Code Testing

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'
      - ".github"
  workflow_dispatch:


concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ---------------------------------
  # Unit Testing
  # ---------------------------------
  unit-testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: ["3.10"] # "3.11"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    #---------------------------------------------------
    # Configuring Python environments.
    #
    # We cache both the pip packages and the installation dir.
    # If the pyproject remains unchanged, we re-use the existing installation dir.
    # If the pyproject has changed, we reinstall everything using the cached pip packages.
    - name: Cache Pip Packages
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies

    - name: Cache Python Installation
      uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }} # Cache the whole python installation dir.
        key: ${{ matrix.os }}_python-${{ matrix.python-version }}_${{ hashFiles('pyproject.toml', '*/pyproject.toml') }}
      #---------------------------------------------------

    - name: Install SuperDuperDB Project
      run: |
        # Install core and testsuite dependencies on the cached python environment.
        python -m pip install .[testsuite]

    - name: Install DevKit (docs, testing, etc)
      run: |
        make install-devkit

    - name: Check core imports
      run: |
        # This job checks that no optional dependencies are imported in the core code.
        python -m pip install impall==1.3.1
        python -m impall --NO_CLEAR_SYS_MODULES -E 'test**:superduperdb/ext**'

    - name: Lint and type-check
      run: |
        make lint-and-type-check

    - name: Unit Testing
      run: |
        make unit-testing PYTEST_ARGUMENTS="--cov=superduperdb --cov-report=xml"

    - name: Upload code coverage to Codecov
      uses: codecov/codecov-action@v3.1.4
      with:
        env_vars: RUNNER_OS,PYTHON_VERSION
        file: ./coverage.xml
        fail_ci_if_error: false
        name: codecov-umbrella

  # ---------------------------------
  # Integration Testing
  # ---------------------------------
  integration-testing:
    needs: [ 'unit-testing' ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create Docker Cache Storage Backend
      run: |
        docker buildx create --use --driver=docker-container        

    - name: Build Sandbox Image
      run: |
        # Build sandbox image for testing.
        make testenv_image EXTRA_ARGS="--cache-to type=gha --cache-from type=gha"

    - name: Start Testing Environment
      run: |
        # Update hostnames
        echo  127.0.0.1 mongodb | sudo tee -a /etc/hosts
        
        # Run the integrated testing environment
        make testenv_init

    - name: Integration Testing
      run: |
        # Run the test-suite within the sandbox image.
        docker run --entrypoint '/bin/sh' superduperdb/sandbox:latest -c 'make install-devkit && make integration-testing PYTEST_ARGUMENTS="--cov=superduperdb --cov-report=xml"'

    - name: Shutdown Testing Environment
      run: |
        # Run the integrated testing environment
        make testenv_init

        # Remove the data directory
        sudo rm -rf deploy/testenv/.test_data