name: Nightly Repo Checks

on:
  schedule:
    # Triggers the workflow every day at 0130 UTC
    - cron: "30 1 * * *"
  workflow_dispatch:

jobs:
    #---------------------------------------------------
    # Repo Analytics
    #---------------------------------------------------
    repo-analytics:
      runs-on: ubuntu-22.04
      environment: "analytics"
      steps:
        - uses: jgehrcke/github-repo-stats@HEAD
          with:
            ghtoken: ${{ secrets.GH_TOKEN_ANALYTICS }}

    #---------------------------------------------------
    # Check for broken links in *md files
    #---------------------------------------------------
#    markdown-link-check:
#      runs-on: ubuntu-latest
#      steps:
#      - uses: actions/checkout@master
#      - name: Create configuration for handling relative paths
#        # regex validation: https://regex101.com/r/L2M2wa/1
#        run: |
#          cat <<EOF > mlc_config.json
#          {
#            "replacementPatterns": [
#              {
#              "pattern": "^[./]",
#              "replacement": "{{BASEURL}}/"
#              }
#              ]
#          }
#          EOF
#      - uses: gaurav-nelson/github-action-markdown-link-check@v1
#        with:
#          config-file: 'mlc_config.json'


    #---------------------------------------------------
    # Testing
    #---------------------------------------------------
    # Run tests using the latest versions of dependencies for the dev environment.
    testing:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
              os: [ "ubuntu-latest" ]  # TODO: add "windows-latest", "macos-latest" when Docker removed
    #          python-version: [ "3.8", "3.9", "3.10", "3.11" ]
              python-version: [ "3.8" ]
        defaults:
            run:
              shell: bash
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              id: setup-python
              uses: actions/setup-python@v4
              with:
                python-version: ${{ matrix.python-version }}

            - name: Cache Dependencies
              uses: actions/cache@v3
              with:
                # https://blog.allenai.org/python-caching-in-github-actions-e9452698e98d
                path: ${{ env.pythonLocation }}
                key: ${{ matrix.os }}_${{ matrix.python-version }}_${{ hashFiles('./pyproject.toml') }}

            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: |
                pip install .[dev,demo]

            - name: Run unit testing
              run: make test

            - name: Run notebook testing
              env:
                # set credentials for OpenAI
                OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
              run: |
                # List Jupyter notebooks
                NOTEBOOKS=./examples
    
                # Check if there are any changes
                if [ ! -e "${NOTEBOOKS}" ]; then
                  echo "Notebook path does not exist."
                else 
                  make test_notebooks NOTEBOOKS=${NOTEBOOKS}
                fi