version: "3.9"
services:
  # MongoDB Datastore
  # ------------------------------
  mongodb:
    image: mongo:7
    hostname: mongodb
    ports:
      - "27017:27017"
    environment:
      # create a root account in `admin` database
      # 'mongodb://root:root@localhost:27017/admin'
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

      # create a superduper account in `test_db` database
      # "mongodb://superduper:superduper@localhost:27017/test_db"
      SDDB_USER: ${SDDB_USER}
      SDDB_PASS: ${SDDB_PASS}
      SDDB_DATABASE: ${SDDB_DATABASE}
    volumes:
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  # Dask Parallel Computation
  # ------------------------------
  dask-scheduler:
    image: daskdev/dask:latest
    hostname: scheduler
    ports:
      - "8786:8786"
      - "8787:8787"
    command: ["dask-scheduler"]

  dask-worker:
    image: daskdev/dask:latest
    command: ["dask-worker", "tcp://scheduler:8786"]
    # For Docker swarm, you can specify multiple workers, but this is ignored by `docker-compose up`
    deploy:
      replicas: 2

  # SuperDuperDB Notebooks
  # ------------------------------
  #superduperdb:
  #  depends_on:
  #    - mongodb
  #    - dask-scheduler
  #  image: superduperdb/demo:0.0.15
  #  ports:
  #    - "8888:8888"
  #  command: ["jupyter", "lab", "--ip='*'", "--LabApp.token=''"]
  #  environment:
  #      DASK_URI: "tcp://dask-scheduler:8786"
  #      MONGODB_URI: "mongodb://${SDDB_USER}:${SDDB_PASS}@mongodb"
